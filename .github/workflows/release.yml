name: Build and Package

on: [push]

jobs:
  build_macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup environment
        run: |
          brew install cmake

      - name: Build and create package
        run: |
          cmake --build . || { echo "Build failed"; exit 1; }
          cpack -G PKG || { echo "Package creation failed"; exit 1; }

      - name: List files after build
        run: |
          echo "Current directory:"
          pwd
          echo "Contents of the build directory:"
          ls -alh

      - name: Set .pkg file path
        id: set_pkg_path
        run: |
          PKG_FILE=$(find . -name "*.pkg" | head -n 1)
          if [[ -z "$PKG_FILE" ]]; then
            echo "No .pkg file found."
            exit 1
          else
            echo "pkg_path=$(realpath "$PKG_FILE")" >> $GITHUB_ENV
            echo "pkg_path=$(realpath "$PKG_FILE")" >> $GITHUB_OUTPUT
            echo "Found package: $PKG_FILE"
          fi

      - name: Upload .pkg artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-macos-package
          path: ${{ steps.set_pkg_path.outputs.pkg_path }}

  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Build and create package
        run: |
          cmake --build . || { echo "Build failed"; exit 1; }
          cpack -G DEB || { echo "Package creation failed"; exit 1; }

      - name: List files after build
        run: |
          echo "Current directory:"
          pwd
          echo "Contents of the build directory:"
          ls -alh

      - name: Set .deb file path
        id: set_deb_path
        run: |
          DEB_FILE=$(find . -name "*.deb" | head -n 1)
          if [[ -z "$DEB_FILE" ]]; then
            echo "No .deb file found."
            exit 1
          else
            echo "deb_path=$(realpath "$DEB_FILE")" >> $GITHUB_ENV
            echo "deb_path=$(realpath "$DEB_FILE")" >> $GITHUB_OUTPUT
            echo "Found package: $DEB_FILE"
          fi

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-ubuntu-package
          path: ${{ steps.set_deb_path.outputs.deb_path }}
