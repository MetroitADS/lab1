name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build-release-ubuntu:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.zip
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.zip
          asset_content_type: application/zip

  build-release-macos:
    runs-on: macos-latest
    needs: build-release-ubuntu
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: brew install boost
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Upload macOS Release Asset
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build-release-ubuntu.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-macOS.zip
          asset_name: helloworld-0.0.${{ github.run_number }}-macOS.zip
          asset_content_type: application/zip

  build-release-windows:
    runs-on: windows-latest
    needs: build-release-ubuntu
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: choco install boost --version=1.76.0
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -G "Visual Studio 16 2019"
      - run: cmake --build . --config Release
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build-release-ubuntu.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Windows.zip
          asset_name: helloworld-0.0.${{ github.run_number }}-Windows.zip
          asset_content_type: application/zip
