name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

permissions:
  contents: write
  packages: write

jobs:
  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - run: brew update && brew install boost # Установка Boost через Homebrew

      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package

      # Проверка на наличие .pkg файла
      - name: Verify .pkg file creation
        run: |
          echo "Current directory contents:"
          ls -la ./
          echo "Searching for .pkg files:"
          find . -name "*.pkg"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }} # Используем формат тега
          release_name: Release v${{ github.run_number }} # Используем формат названия релиза
          draft: false
          prerelease: false

      - name: Upload Release Asset for macOS
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Darwin.pkg # Путь к файлу для macOS
          asset_name: helloworld-0.0.${{ github.run_number }}-Darwin.pkg # Имя файла для macOS
          asset_content_type: application/octet-stream

  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .

      # Run CPack to create the .deb package
      - name: Create Debian Package
        run: cpack -G DEB

      # Проверка на наличие .deb файла
      - name: Verify .deb file creation
        run: |
          echo "Current directory contents:"
          ls -la ./
          echo "Searching for .deb files:"
          find . -name "*.deb"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset for Linux
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb  # Измените на ваше фактическое имя
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/octet-stream
